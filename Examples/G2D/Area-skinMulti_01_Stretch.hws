/* ****************************************************************************
  G2D : Area:skinMulti() -> 2 Stretch Layers.
  This program shows hot to use the :skinMulti() method building a 2 layers
  skin composed by 2 'stretch' skins.
  ****************************************************************************/
@INCLUDE "../../+Includes.hws"
@INCLUDE #INC_G2D

@DISPLAY 1, { Width = 800, Height = 600 }

;-------------------------------------------------------------------------------

Local area1 = G2D.Area:new( 50,  120, 300, 300)

; Here is an example on how to build a skin with multiple layers, you have to
; specify the skin type, the offset area (its values will be added to the area
; object), and finally the parameters needed by the selected skin.
;
; In this example you see how the area table make the layer skin shift by the
; amount specified.
; You can also see hot to adjust several layers using the area offsets.
;+------------------------------------------------------------------------------
; For speed purposes we preload the brushes but you can also specify filenames
; instead of brush ids when defining skin layers.
Local brush1 = LoadBrush(Nil, "Resources/layer1.png", { LoadAlpha = True })
Local brush2 = LoadBrush(Nil, "Resources/layer2.png", { LoadAlpha = True })

Local layers =
   { { Type   = GFX.SkinType_Stretch,               ; FIRST LAYER (Index 0)
       Area   = { x = -15, y = -15, w = 0, h = 0 }, ; Area offsets
       Params =                                     ; Skin parameters
          { Brush = brush1,                         ; You can specify a preloaded brush
            Offset = { x = 0, y = 0 },
            Alpha = #NONE } },
     { Type   = GFX.SkinType_Stretch,               ; SECOND LAYER (Index 1)
       Area   = { x = 15, y = 15, w = 0, h = 0 },
       Params =
          { Brush = brush2,
            Offset = { x = 0, y = 0 },
            Alpha = #NONE } },
   }


;-------------------------------------------------------------------------------
; For smooth graphics let's use the double buffer
BeginDoubleBuffer()

While Not(IsLeftMouse())
  
  Cls($888888)

  TextOut(#CENTER, 10, "Left mouse click to quit.", { color = $AA0000 })
  TextOut(#CENTER, 24, "Right mouse click to switch smoothing (now:" .. GFX.SmoothZoom ..")", { color = $AAFF00 })
  TextOut(#CENTER, 38, "The white box is the area but the skins are rendered in different positions", { color = $000000 })
  TextOut(#CENTER, 52, "because of the area table which represent the offsets.", { color = $000000 })
  
  ; Display the original brushes
  DisplayBrush(brush1, 500, 130)
  TextOut(650, 140, "Original brush 1", { Color = $004444 })
  DisplayBrush(brush2, 500, 300)
  TextOut(650, 310, "Original brush 2", { Color = $004444 })
  
  ; Make the layer2 skin shift
  layers[1].Params.Offset.y = layers[1].Params.Offset.y + 0.5

  area1:skinMulti(layers)

  ; Area marker, let's draw a box around the area
  area1:box($FFFFFF, 1)

  Flip(True)

  ; Check the right mouse button
  If IsRightMouse()
    ; This is really a bad practice!! A blocking event handler!! OMG! :D
    
    GFX.SmoothZoom = Not(GFX.SmoothZoom)
    ; and wait until the button is released
    While IsRightMouse()
      Wait(100, #MILLISECONDS)
    Wend
  EndIf

Wend

